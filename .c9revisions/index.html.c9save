{"ts":1349736250170,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<html>\r\n<head>\r\n<title>Cloud9, NodeJS & Heroku: websockets for all</title>\r\n\r\n<script src=\"/socket.io/socket.io.js\"></script>\r\n\r\n<script>\r\nonerror = function (msg) {\r\nlog(msg);\r\n}\r\nfunction log(msg) {\r\ndocument.getElementById('log').appendChild(document.createTextNode(new Date() + ' ' + msg + '\\n'));\r\n}\r\nfunction status(msg) {\r\nlog(msg);\r\ndocument.getElementById('status').textContent = msg;\r\n}\r\nfunction clearLog() {\r\nvar e = document.getElementById('log');\r\nwhile (e.hasChildNodes()) {\r\ne.removeChild(e.firstChild);\r\n}\r\ne.appendChild(document.createTextNode('Log: \\n'));\r\n}\r\n</script>\r\n\r\n<script>\r\nvar socket = null;\r\nfunction connect() {\r\nlog('Connecting to local server...');\r\nif (socket == null) {\r\nsocket = io.connect(null,{'auto connect': false});\r\nsocket.on('connect', function () {\r\nstatus('Connected');\r\n});\r\n\r\nsocket.on('message', function (data) {\r\nlog(data);\r\n});\r\n}\r\nsocket.socket.connect();\r\n}\r\n\r\nfunction send() {\r\nif (socket && socket.socket.connected) {\r\nsocket.send(document.getElementById('text').value);\r\nlog('>' + document.getElementById('text').value);\r\n} else {\r\nlog('Not connected.');\r\n}\r\n}\r\n\r\nfunction send100() {\r\nif (socket && socket.socket.connected) {\r\nfor (var i = 0; i < 100; i += 1) {\r\nsocket.send('test'+ i);\r\nlog('> test' + i);\r\n}\r\n} else {\r\nlog('Not connected.');\r\n}\r\n}\r\n\r\nfunction update() {\r\nif (socket && socket.socket && socket.socket.transport) {\r\ndocument.getElementById('sessionId').textContent = socket.socket.transport.sessid;\r\ndocument.getElementById('transport').textContent = socket.socket.transport.name;\r\n} else {\r\ndocument.getElementById('sessionId').textContent = '-';\r\ndocument.getElementById('transport').textContent = '-';\r\n}\r\n}\r\nsetInterval(update, 10);\r\n\r\n</script>\r\n</head>\r\n\r\n<body onload=\"connect()\">\r\n<p>\r\n<label style='width:200px;float:left'>Status: <span id=\"status\">Idle</span></label>\r\n</p>\r\n<p>SessionId: <span id=\"sessionId\">-</span></p>\r\n<p>Transport: <span id=\"transport\">-</span></p>\r\n\r\n<p>\r\n<label>Message: <input id=\"text\" type=\"text\" size=\"80\" value=\"\"/></label>\r\n<input type=button value=\"Echo\" onclick=\"send()\">\r\n</p>\r\n\r\n<p>\r\n<input type=button value=\"Spam 100 packets\" onclick=\"send100()\" />\r\n<input type=button value=\"Clear log\" onclick=\"clearLog()\" />\r\n</p>\r\n\r\n<pre id=\"log\">Log:</pre>\r\n</body>\r\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":2284}]],"length":2284}
{"contributors":[],"silentsave":false,"ts":1349736250229,"patch":[[{"diffs":[[1,"<html>\r\n<head>\r\n<title>Cloud9, NodeJS & Heroku: websockets for all</title>\r\n\r\n<script src=\"/socket.io/socket.io.js\"></script>\r\n\r\n<script>\r\nonerror = function (msg) {\r\nlog(msg);\r\n}\r\nfunction log(msg) {\r\ndocument.getElementById('log').appendChild(document.createTextNode(new Date() + ' ' + msg + '\\n'));\r\n}\r\nfunction status(msg) {\r\nlog(msg);\r\ndocument.getElementById('status').textContent = msg;\r\n}\r\nfunction clearLog() {\r\nvar e = document.getElementById('log');\r\nwhile (e.hasChildNodes()) {\r\ne.removeChild(e.firstChild);\r\n}\r\ne.appendChild(document.createTextNode('Log: \\n'));\r\n}\r\n</script>\r\n\r\n<script>\r\nvar socket = null;\r\nfunction connect() {\r\nlog('Connecting to local server...');\r\nif (socket == null) {\r\nsocket = io.connect(null,{'auto connect': false});\r\nsocket.on('connect', function () {\r\nstatus('Connected');\r\n});\r\n\r\nsocket.on('message', function (data) {\r\nlog(data);\r\n});\r\n}\r\nsocket.socket.connect();\r\n}\r\n\r\nfunction send() {\r\nif (socket && socket.socket.connected) {\r\nsocket.send(document.getElementById('text').value);\r\nlog('>' + document.getElementById('text').value);\r\n} else {\r\nlog('Not connected.');\r\n}\r\n}\r\n\r\nfunction send100() {\r\nif (socket && socket.socket.connected) {\r\nfor (var i = 0; i < 100; i += 1) {\r\nsocket.send('test'+ i);\r\nlog('> test' + i);\r\n}\r\n} else {\r\nlog('Not connected.');\r\n}\r\n}\r\n\r\nfunction update() {\r\nif (socket && socket.socket && socket.socket.transport) {\r\ndocument.getElementById('sessionId').textContent = socket.socket.transport.sessid;\r\ndocument.getElementById('transport').textContent = socket.socket.transport.name;\r\n} else {\r\ndocument.getElementById('sessionId').textContent = '-';\r\ndocument.getElementById('transport').textContent = '-';\r\n}\r\n}\r\nsetInterval(update, 10);\r\n\r\n</script>\r\n</head>\r\n\r\n<body onload=\"connect()\">\r\n<p>\r\n<label style='width:200px;float:left'>Status: <span id=\"status\">Idle</span></label>\r\n</p>\r\n<p>SessionId: <span id=\"sessionId\">-</span></p>\r\n<p>Transport: <span id=\"transport\">-</span></p>\r\n\r\n<p>\r\n<label>Message: <input id=\"text\" type=\"text\" size=\"80\" value=\"\"/></label>\r\n<input type=button value=\"Echo\" onclick=\"send()\">\r\n</p>\r\n\r\n<p>\r\n<input type=button value=\"Spam 100 packets\" onclick=\"send100()\" />\r\n<input type=button value=\"Clear log\" onclick=\"clearLog()\" />\r\n</p>\r\n\r\n<pre id=\"log\">Log:</pre>\r\n</body>\r\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":2284}]],"length":2284,"saved":false}
